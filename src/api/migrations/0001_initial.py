# Generated by Django 4.2.16 on 2024-10-18 06:55

import api.models.mixins.uid
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lookup',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('restored_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('transaction_id', models.UUIDField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_types', to='api.lookup')),
            ],
            options={
                'permissions': [('can_undelete', 'Can undelete this object')],
                'abstract': False,
            },
            bases=(models.Model, api.models.mixins.uid.UIDMixin),
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('restored_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('transaction_id', models.UUIDField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(editable=False, max_length=4, unique=True)),
                ('domain', models.CharField(max_length=55, unique=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='merchant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'owner', 'code')},
            },
            bases=(models.Model, api.models.mixins.uid.UIDMixin),
        ),
        migrations.CreateModel(
            name='Outlet',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('restored_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('transaction_id', models.UUIDField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outlets', to='api.merchant')),
            ],
            options={
                'unique_together': {('name', 'merchant')},
            },
            bases=(models.Model, api.models.mixins.uid.UIDMixin),
        ),
        migrations.CreateModel(
            name='MerchantMember',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('restored_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('transaction_id', models.UUIDField(blank=True, editable=False, null=True)),
                ('address', models.TextField(null=True)),
                ('status', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('cnic', models.CharField(max_length=13, null=True)),
                ('avatar', models.ImageField(null=True, upload_to='protected/avatars')),
                ('emergency_contact', models.CharField(max_length=10, null=True)),
                ('emergency_contact_name', models.CharField(max_length=100, null=True)),
                ('blood_group', models.CharField(max_length=3, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('phone', models.CharField(max_length=10, null=True, verbose_name='Primary Phone')),
                ('registration_number', models.CharField(max_length=50, null=True)),
                ('gender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gender', to='api.lookup')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchant_member', to='api.merchant')),
                ('outlets', models.ManyToManyField(to='api.outlet')),
                ('phone_network', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='network', to='api.lookup')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.lookup')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MerchantsMembersRegister',
                'unique_together': {('user', 'merchant', 'role', 'cnic', 'status')},
            },
            bases=(models.Model, api.models.mixins.uid.UIDMixin),
        ),
    ]
